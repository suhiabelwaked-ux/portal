from app import db
from datetime import datetime

class Vulnerability(db.Model):
    __tablename__ = 'vulnerabilities'
    
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.Text, nullable=False)
    severity = db.Column(db.String(20), nullable=False)  # high, medium, low, informational
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    updated_at = db.Column(db.DateTime, default=datetime.utcnow, onupdate=datetime.utcnow)
    
    def to_dict(self):
        return {
            'id': self.id,
            'name': self.name,
            'severity': self.severity,
            'created_at': self.created_at.isoformat() if self.created_at else None
        }

class PendingVulnerability(db.Model):
    __tablename__ = 'pending_vulnerabilities'
    
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.Text, nullable=False)
    severity = db.Column(db.String(20), nullable=False)
    search_type = db.Column(db.String(20), nullable=False)  # router, firewall
    submitted_by = db.Column(db.String(80), nullable=False)
    created_at = db.Column(db.DateTime, default=datetime.utcnow)
    
    def to_dict(self):
        return {
            'id': self.id,
            'name': self.name,
            'severity': self.severity,
            'search_type': self.search_type,
            'submitted_by': self.submitted_by,
            'created_at': self.created_at.isoformat() if self.created_at else None
        }